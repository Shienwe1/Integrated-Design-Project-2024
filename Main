import time
import threading
from multiprocessing import Process
from LidController import AutoLidSystem
from dualservocontroller import DualServoController
from YOLO_inference import YOLOInference

# Initialize dual servo controller
servo_controller = DualServoController(pin1=18, pin2=24)

def run_yolo_inference():
    yolo_model_path = '/home/user/YOLO/my_model.pt'
    yolo_source = 'picamera0'  # Adjust as needed

    yolo = YOLOInference(
        model_path=yolo_model_path,
        source=yolo_source,
        thresh=0.5,
        resolution=(640, 480),
        record=False
    )

    try:
        print("[INFO] Starting YOLO Inference...")
        yolo.run_inference()
    except KeyboardInterrupt:
        print("[INFO] YOLO Inference interrupted.")
    finally:
        yolo.cleanup()

def ultrasonic_thread(lid_system, servo_controller):
    while True:
        distance = lid_system.get_distance()
        print(f"[INFO] Distance: {distance} cm")

        if distance <= lid_system.THRESHOLD:
            # Step 1: Open lid (SG90 on GPIO23)
            lid_system.open_lid()
            time.sleep(3)

            # Step 2: Close lid
            lid_system.close_lid()

            # Step 3: Servo GPIO24 input
            try:
                angle2 = int(input("Enter angle for servo on GPIO24 (0–180): "))
                if not 0 <= angle2 <= 180:
                    print("[ERROR] Angle must be between 0 and 180.")
                    continue
                servo_controller.set_servo2(angle2)

                # Step 4: Servo GPIO18 input
                angle1 = int(input("Enter angle for servo on GPIO18 (0–180): "))
                if not 0 <= angle1 <= 180:
                    print("[ERROR] Angle must be between 0 and 180.")
                    continue
                servo_controller.set_servo1(angle1)

                print("[INFO] Servos positioned. Waiting 3 seconds...")
                time.sleep(3)

                # Return GPIO18 to 75°
                servo_controller.set_servo1(75)
                print("[INFO] Servo on GPIO18 reset to 75°")

                time.sleep(2)  # Pause before next detection

            except ValueError:
                print("[ERROR] Invalid input. Please enter numeric values.")

        else:
            print("[INFO] No object detected. Sleeping briefly...")
            time.sleep(1)

def main():
    lid_system = AutoLidSystem(trig_pin=17, echo_pin=27, servo_pin=23, threshold=20)

    ultrasonic_thread_instance = threading.Thread(target=ultrasonic_thread, args=(lid_system, servo_controller))
    ultrasonic_thread_instance.start()

    yolo_process = Process(target=run_yolo_inference)
    yolo_process.start()

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("[INFO] Interrupted by user.")
    finally:
        yolo_process.terminate()
        yolo_process.join()

        lid_system.cleanup()
        servo_controller.cleanup()
        print("[INFO] System shut down gracefully.")

if __name__ == '__main__':
    main()




